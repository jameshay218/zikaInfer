// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// toUnitScale
double toUnitScale(double x, double min, double max);
RcppExport SEXP zikaProj_toUnitScale(SEXP xSEXP, SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    __result = Rcpp::wrap(toUnitScale(x, min, max));
    return __result;
END_RCPP
}
// fromUnitScale
double fromUnitScale(double x, double min, double max);
RcppExport SEXP zikaProj_fromUnitScale(SEXP xSEXP, SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    __result = Rcpp::wrap(fromUnitScale(x, min, max));
    return __result;
END_RCPP
}
// likelihood
double likelihood(NumericMatrix dat, NumericMatrix alphas, NumericVector mus, NumericVector sds);
RcppExport SEXP zikaProj_likelihood(SEXP datSEXP, SEXP alphasSEXP, SEXP musSEXP, SEXP sdsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mus(musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sds(sdsSEXP);
    __result = Rcpp::wrap(likelihood(dat, alphas, mus, sds));
    return __result;
END_RCPP
}
// likelihood_threshold
double likelihood_threshold(NumericMatrix dat, NumericMatrix alphas, NumericVector mus, NumericVector sds, double threshold);
RcppExport SEXP zikaProj_likelihood_threshold(SEXP datSEXP, SEXP alphasSEXP, SEXP musSEXP, SEXP sdsSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mus(musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sds(sdsSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    __result = Rcpp::wrap(likelihood_threshold(dat, alphas, mus, sds, threshold));
    return __result;
END_RCPP
}
// likelihood_prob
double likelihood_prob(NumericMatrix dat, NumericVector alphas);
RcppExport SEXP zikaProj_likelihood_prob(SEXP datSEXP, SEXP alphasSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphas(alphasSEXP);
    __result = Rcpp::wrap(likelihood_prob(dat, alphas));
    return __result;
END_RCPP
}
// calculate_alphas_prob_buckets
NumericVector calculate_alphas_prob_buckets(NumericMatrix y, double probMicro, double baselineProb, NumericMatrix times);
RcppExport SEXP zikaProj_calculate_alphas_prob_buckets(SEXP ySEXP, SEXP probMicroSEXP, SEXP baselineProbSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type probMicro(probMicroSEXP);
    Rcpp::traits::input_parameter< double >::type baselineProb(baselineProbSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type times(timesSEXP);
    __result = Rcpp::wrap(calculate_alphas_prob_buckets(y, probMicro, baselineProb, times));
    return __result;
END_RCPP
}
// calculate_alphas_prob_sampfreq
NumericVector calculate_alphas_prob_sampfreq(NumericMatrix y, double probMicro, double baselineProb, int sampFreq);
RcppExport SEXP zikaProj_calculate_alphas_prob_sampfreq(SEXP ySEXP, SEXP probMicroSEXP, SEXP baselineProbSEXP, SEXP sampFreqSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type probMicro(probMicroSEXP);
    Rcpp::traits::input_parameter< double >::type baselineProb(baselineProbSEXP);
    Rcpp::traits::input_parameter< int >::type sampFreq(sampFreqSEXP);
    __result = Rcpp::wrap(calculate_alphas_prob_sampfreq(y, probMicro, baselineProb, sampFreq));
    return __result;
END_RCPP
}
// p_test
NumericVector p_test(NumericMatrix dat, NumericMatrix alphas, NumericVector mus, NumericVector sds, double threshold);
RcppExport SEXP zikaProj_p_test(SEXP datSEXP, SEXP alphasSEXP, SEXP musSEXP, SEXP sdsSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alphas(alphasSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mus(musSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sds(sdsSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    __result = Rcpp::wrap(p_test(dat, alphas, mus, sds, threshold));
    return __result;
END_RCPP
}
// calculate_alphas
NumericVector calculate_alphas(NumericMatrix y, double probMicro, int sampFreq);
RcppExport SEXP zikaProj_calculate_alphas(SEXP ySEXP, SEXP probMicroSEXP, SEXP sampFreqSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type probMicro(probMicroSEXP);
    Rcpp::traits::input_parameter< int >::type sampFreq(sampFreqSEXP);
    __result = Rcpp::wrap(calculate_alphas(y, probMicro, sampFreq));
    return __result;
END_RCPP
}
// calculate_alphas_buckets
NumericVector calculate_alphas_buckets(NumericMatrix y, double probMicro, NumericMatrix times);
RcppExport SEXP zikaProj_calculate_alphas_buckets(SEXP ySEXP, SEXP probMicroSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type probMicro(probMicroSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type times(timesSEXP);
    __result = Rcpp::wrap(calculate_alphas_buckets(y, probMicro, times));
    return __result;
END_RCPP
}
// scaletuning2
double scaletuning2(double step, double popt, double pcur);
RcppExport SEXP zikaProj_scaletuning2(SEXP stepSEXP, SEXP poptSEXP, SEXP pcurSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type step(stepSEXP);
    Rcpp::traits::input_parameter< double >::type popt(poptSEXP);
    Rcpp::traits::input_parameter< double >::type pcur(pcurSEXP);
    __result = Rcpp::wrap(scaletuning2(step, popt, pcur));
    return __result;
END_RCPP
}
// proposal_function
double proposal_function(double current, double lower, double upper, double step);
RcppExport SEXP zikaProj_proposal_function(SEXP currentSEXP, SEXP lowerSEXP, SEXP upperSEXP, SEXP stepSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type current(currentSEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    Rcpp::traits::input_parameter< double >::type step(stepSEXP);
    __result = Rcpp::wrap(proposal_function(current, lower, upper, step));
    return __result;
END_RCPP
}
// generate_foi
NumericVector generate_foi(NumericVector IM, double NH, double b, double pMH, double tstep);
RcppExport SEXP zikaProj_generate_foi(SEXP IMSEXP, SEXP NHSEXP, SEXP bSEXP, SEXP pMHSEXP, SEXP tstepSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type IM(IMSEXP);
    Rcpp::traits::input_parameter< double >::type NH(NHSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type pMH(pMHSEXP);
    Rcpp::traits::input_parameter< double >::type tstep(tstepSEXP);
    __result = Rcpp::wrap(generate_foi(IM, NH, b, pMH, tstep));
    return __result;
END_RCPP
}
// generate_riskS
NumericVector generate_riskS(NumericVector foi, double tstep);
RcppExport SEXP zikaProj_generate_riskS(SEXP foiSEXP, SEXP tstepSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type foi(foiSEXP);
    Rcpp::traits::input_parameter< double >::type tstep(tstepSEXP);
    __result = Rcpp::wrap(generate_riskS(foi, tstep));
    return __result;
END_RCPP
}
// generate_riskI
NumericVector generate_riskI(NumericVector foi, NumericVector riskS, double tstep);
RcppExport SEXP zikaProj_generate_riskI(SEXP foiSEXP, SEXP riskSSEXP, SEXP tstepSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type foi(foiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type riskS(riskSSEXP);
    Rcpp::traits::input_parameter< double >::type tstep(tstepSEXP);
    __result = Rcpp::wrap(generate_riskI(foi, riskS, tstep));
    return __result;
END_RCPP
}
// generate_probM_aux
NumericVector generate_probM_aux(NumericVector riskI, NumericVector probM, double bp);
RcppExport SEXP zikaProj_generate_probM_aux(SEXP riskISEXP, SEXP probMSEXP, SEXP bpSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type riskI(riskISEXP);
    Rcpp::traits::input_parameter< NumericVector >::type probM(probMSEXP);
    Rcpp::traits::input_parameter< double >::type bp(bpSEXP);
    __result = Rcpp::wrap(generate_probM_aux(riskI, probM, bp));
    return __result;
END_RCPP
}
// generate_probM
NumericVector generate_probM(NumericVector IM, NumericVector probM, double NH, double b, double pMH, double bp, double tstep);
RcppExport SEXP zikaProj_generate_probM(SEXP IMSEXP, SEXP probMSEXP, SEXP NHSEXP, SEXP bSEXP, SEXP pMHSEXP, SEXP bpSEXP, SEXP tstepSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type IM(IMSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type probM(probMSEXP);
    Rcpp::traits::input_parameter< double >::type NH(NHSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type pMH(pMHSEXP);
    Rcpp::traits::input_parameter< double >::type bp(bpSEXP);
    Rcpp::traits::input_parameter< double >::type tstep(tstepSEXP);
    __result = Rcpp::wrap(generate_probM(IM, probM, NH, b, pMH, bp, tstep));
    return __result;
END_RCPP
}
// likelihood_probM
double likelihood_probM(NumericVector microBirths, NumericVector allBirths, NumericVector probM);
RcppExport SEXP zikaProj_likelihood_probM(SEXP microBirthsSEXP, SEXP allBirthsSEXP, SEXP probMSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type microBirths(microBirthsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type allBirths(allBirthsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type probM(probMSEXP);
    __result = Rcpp::wrap(likelihood_probM(microBirths, allBirths, probM));
    return __result;
END_RCPP
}
// likelihood_probM_all
double likelihood_probM_all(NumericVector microBirths, NumericVector allBirths, NumericVector IM, NumericVector probM, double NH, double b, double pHM, double bp, double tstep);
RcppExport SEXP zikaProj_likelihood_probM_all(SEXP microBirthsSEXP, SEXP allBirthsSEXP, SEXP IMSEXP, SEXP probMSEXP, SEXP NHSEXP, SEXP bSEXP, SEXP pHMSEXP, SEXP bpSEXP, SEXP tstepSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type microBirths(microBirthsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type allBirths(allBirthsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type IM(IMSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type probM(probMSEXP);
    Rcpp::traits::input_parameter< double >::type NH(NHSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type pHM(pHMSEXP);
    Rcpp::traits::input_parameter< double >::type bp(bpSEXP);
    Rcpp::traits::input_parameter< double >::type tstep(tstepSEXP);
    __result = Rcpp::wrap(likelihood_probM_all(microBirths, allBirths, IM, probM, NH, b, pHM, bp, tstep));
    return __result;
END_RCPP
}
// average_buckets
NumericVector average_buckets(NumericVector a, NumericVector buckets);
RcppExport SEXP zikaProj_average_buckets(SEXP aSEXP, SEXP bucketsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type buckets(bucketsSEXP);
    __result = Rcpp::wrap(average_buckets(a, buckets));
    return __result;
END_RCPP
}
